% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/barsChart.R
\name{wjp_bars}
\alias{wjp_bars}
\title{Plot a Bar Chart following WJP style guidelines}
\usage{
wjp_bars(
  data,
  target,
  grouping,
  labels = NULL,
  colors,
  cvec = NULL,
  direction = "vertical",
  stacked = F,
  lab_pos = NULL,
  expand = F,
  order = NULL,
  width = 0.9,
  ptheme = WJP_theme()
)
}
\arguments{
\item{data}{Data frame containing the data to plot}

\item{target}{String. Column name of the variable that will supply the values to plot.}

\item{grouping}{String. Column name of the variable that supplies the grouping values.}

\item{labels}{String. Column name of the variable containing the value labels to display in plot.}

\item{colors}{String. Column name of the variable that contains the color grouping.}

\item{cvec}{Named vector with the colors to apply to bars.}

\item{direction}{String. Should the bars be plotted in a "horizontal" or "vertical" way?}

\item{stacked}{Boolean. If TRUE, bars will be stacked on top of each other per group. Default is FALSE.}

\item{lab_pos}{String. Column name of the variable that contains the coordinates for the value labels.}

\item{expand}{Boolean. If TRUE, the plot will give extra space for value labels. Default is FALSE.}

\item{width}{Numeric value between 0 and 1. Width of bars as a percentage of the space for each bar.}

\item{ptheme}{ggplot theme function to apply to the plot. By default, function applies WJP_theme()}

\item{order_var}{String. Column name of the variable that contains the custom order for labels.}
}
\value{
A ggplot object
}
\description{
\code{wjp_bars()} takes a data frame with a specific data structure (usually long shaped) and returns a ggplot
object with a bar chart following WJP style guidelines.
}
\examples{
\dontrun{
# Always load the WJP fonts if not passing a custom theme to function
wjp_fonts()

# Preparing data
data2plot <- gpp \%>\% 
  select(country, q1a, q1b, q1c) \%>\%
  mutate(dplyr::across(!country, 
                       ~case_when(.x == 1 | .x == 2 ~ 0, .x == 3 | .x == 4 ~ 1))) \%>\%
  group_by(country) \%>\%
  summarise(across(everything(), \(x) mean(x, na.rm = TRUE))) \%>\% 
  mutate(across(!country, \(x) x*100)) \%>\%
  pivot_longer(!country, names_to = "group", values_to = "value2plot")

# Plotting chart
wjp_bars(data = data2plot, target = "value2plot", grouping = "country", colors = "group")
}
}
