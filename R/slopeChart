wjp_slope <- function(
    data,                    
    target,             
    grouping,
    ngroups,                 
    labels         = NULL,
    colors,
    cvec           = NULL,
    repel          = F, 
    transparency   = F,        
    transparencies = NULL,   
    custom.axis    = F,         
    x.breaks       = NULL,    
    x.labels       = NULL,    
    sec.ticks      = NULL,       
    ptheme         = WJP_theme()
){
  
  # Renaming variables in the data frame to match the function naming
  if (is.null(labels)) {
    data <- data %>%
      dplyr::mutate(labels_var    = "") %>%
      rename(target_var    = all_of(target),
             grouping_var  = all_of(grouping),
             colors_var     = all_of(colors))
  } else {
    data <- data %>%
      rename(target_var    = all_of(target),
             grouping_var  = all_of(grouping),
             labels_var    = all_of(labels),
             colors_var    = all_of(colors))
  }
  
  # Creating ggplot
  plt <- ggplot(data, 
                aes(x     = grouping_var,
                    y     = target_var,
                    color = colors_var,
                    label = labels_var,
                    group = ngroups))
  
  if (transparency == F) {
    plt <- plt +
      geom_point(size = 2,
                 show.legend = F) +
      geom_line(linewidth    = 1,
                show.legend  = F)
    
  } else {
    plt <- plt +
      geom_point(size = 2,
                 aes(alpha   = colors_var),
                 show.legend = F) +
      geom_line(linewidth    = 1,
                aes(alpha    = colors_var),
                show.legend  = F) +
      scale_alpha_manual(values = transparencies)
  }
  
  if (repel == F) {
    
    # Applying regular geom_text
    plt <- plt +
      geom_text(aes(y     = target_var + 7.5,
                    x     = grouping_var,
                    label = labels_var),
                family      = "Lato Full",
                fontface    = "bold",
                size        = 3.514598,
                show.legend = F)
    
  } else {
    
    # Applying ggrepel for a better visualization of plots
    plt <- plt +
      geom_text_repel(mapping = aes(y     = target_var,
                                    x     = grouping_var,
                                    label = labels_var),
                      family      = "Lato Full",
                      fontface    = "bold",
                      size        = 3.514598,
                      show.legend = F,
                      
                      # Additional options from ggrepel package:
                      min.segment.length = 1000,
                      seed               = 42,
                      box.padding        = 0.5,
                      direction          = "y",
                      force              = 5,
                      force_pull         = 1)
    
  }
  
  # Continuing with ggplot  
  
  if (custom.axis == F) {
    plt <- plt +
      scale_y_continuous(limits = c(0, 105),
                         expand = c(0,0),
                         breaks = seq(0,100,20),
                         labels = paste0(seq(0,100,20), "%"))
    
    if (!is.null(cvec)) {
      plt <- plt +
        scale_color_manual(values = cvec)
    }
    
  } else {
    plt <- plt +
      scale_y_continuous(limits = c(0, 105),
                         expand = c(0,0),
                         breaks = seq(0,100,20),
                         labels = paste0(seq(0,100,20), "%")) +
      scale_x_continuous(limits = c(head(x.breaks, 1), tail(x.breaks, 1)),
                         breaks = x.breaks,
                         expand = expansion(mult = c(0.075, 0.125)),
                         labels = x.labels,
                         guide  = "axis_minor",
                         minor_breaks = sec.ticks)
    
    if (!is.null(cvec)) {
      plt <- plt +
        scale_color_manual(values = cvec)
    }
  }
  
  plt <- plt +
    ptheme +
    theme(panel.grid.major.x = element_blank(),
          panel.grid.major.y = element_line(colour = "#d1cfd1"),
          axis.title.x       = element_blank(),
          axis.title.y       = element_blank(),
          axis.line.x        = element_line(color    = "#d1cfd1"),
          axis.ticks.x       = element_line(color    = "#d1cfd1",
                                            linetype = "solid"),
          ggh4x.axis.ticks.length.minor = rel(1))
  
  return(plt)
}
